name: .NET Core on push on develop

on:
  push:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-18.04
    container:
      image: mcr.microsoft.com/dotnet/core/sdk:3.1.201-bionic
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Test
        run: dotnet test
      - name: Publish
        run: dotnet publish -c Release -o release
        
      - name: Upload release artifact
        uses: actions/upload-artifact@v1
        with:
          name: release-artifact
          path: ./release
      - name: Upload Dockerfile artifact
        uses: actions/upload-artifact@v1
        with:
          name: dockerfile-artifact
          path: ./Dockerfile
      - name: Upload kubernetes artifact
        uses: actions/upload-artifact@v1
        with:
          name: kubernetes-artifact
          path: ./kube_develop

  deliver:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v1
        with:
          name: release-artifact
          path: ./release
      - name: Download Dockerfile artifact
        uses: actions/download-artifact@v1
        with:
          name: dockerfile-artifact
          path: .
      - name: Deliver Docker image
        env:
          CONTAINER_IMAGE: docker.pkg.github.com/kwetters6/userservice/userservice:${{ github.sha }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}"| docker login docker.pkg.github.com -u ${{ secrets.DOCKER_USER }} --password-stdin
          docker build -t $CONTAINER_IMAGE .
          docker push $CONTAINER_IMAGE
  deploy:
    needs: deliver
    runs-on: ubuntu-18.04
    steps:
      - name: Download kubernetes artifact
        uses: actions/download-artifact@v1
        with:
          name: kubernetes-artifact
          path: ./kube_development

      - uses: Azure/setup-kubectl@v1

      - uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - uses: Azure/k8s-create-secret@v1
        with:
          namespace: kwetter-development
          container-registry-url: docker.pkg.github.com
          container-registry-username: ${{ secrets.DOCKER_USER }}
          container-registry-password: ${{ secrets.GITHUB_TOKEN }}
          secret-name: github-docker-registry

      - uses: Azure/k8s-deploy@v1
        with:
          namespace: kwetter-development
          manifests: |
            ./kube_developt/kube_deployment.yaml
            ./kube_develop/kube_service.yaml
            ./kube_develop/kube_ingress.yaml
          images: |
            docker.pkg.github.com/kwetters6/userservice/userservice:${{ github.sha }}
          imagepullsecrets:
            github-docker-registry
        #env:
          #CONTAINER_IMAGE: ${{ secrets.DOCKER_ORGANIZATION }}/${{ secrets.REPOSITORY_NAME }}:${{ github.sha }}
          #CONTAINER_IMAGE_LATEST: ${{ secrets.DOCKER_ORGANIZATION }}/${{ secrets.REPOSITORY_NAME }}:dev
        #run: |
          #docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          #docker build -t $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .
          #docker push $CONTAINER_IMAGE
          #docker push $CONTAINER_IMAGE_LATEST